; =*=*=*=*=*=*=*=*=*=*=*=*=*   MACHINE LANGUAGE (IN HEX, MHEX) AS THE CODE/PROGRAMMING LANGUAGE TYPE (CPLT)  =*=*=*=*=*=*=*=*=*=*=*=*=*=
; THIS MANIS SEGMENT/SUBROUTINE IS DEDICATED FOR MHEX
; THE CHOICE WOULD ALWAYS BE BETWEEN MACHINE LANGUAGE (IN HEX, MHEX) AND ASSEMBLY LANGUAGE (ASM)
; A TEST FLAG SHOULD COME AFTER SUB MEM FLAG IN THE MAIN PROGRAM

M_HEX:			
; ELOO PLEASE INCLUDE THE INSTRUCTIONS TO CARRY OUT DISPLAY ON LINE 2 HERE
				CALL		KEYPAD_ID						; ENSURE A KEY(1ST KEY) IS DEPRESSED
				JNB			01H, M_HEX
				CLR			01H								; GET READY FOR NEXT KEY

				CJNE		A, #30H, MH_1					; THE CONTENT OF 'A' MUST SATISFY THE FOLLOWING INEQUALITY: 30H =< A =< 46H
				CLR			C								; ENSURE IT PASSES TO THE NEXT INSTRUCTION

MH_1:			JC			M_HEX							; IF A > 30 CONTINUE ELSE GO BACK TO MHEX
				SUBB		A, #30H 						; SUBTRACT 30H FROM A REGISTER
				CJNE		A, #0AH, MH_2					
				CLR			C 								; ENSURE IT PASSES TO THE NEXT INSTRUCTION

MH_2:			JC			MH_4
				SUBB		A, #07H							; SUBTRACT 07H FROM 'A' REGISTER
				CJNE		A, #0FH, MH_3					; CHECK IF THE RESULT OF THE SUBTRACTION IS GREATER THAN 0FH; IF SO EXIT THE SR ELSE CONTINUE
				SETB		C								; ENSURE IT PASSES TO THE NEXT INSTRUCTION

MH_3:			JNC			M_HEX							; START AFRESH (ie MHEX) IF THE KEYPAD INPUT DOES NOT SATISFY THE ABOVE INEQUALITY
															; ELSE CONTINUE
MH_4:			CPL			0AH								; FORMAT THE DATA AND SAVE TEMPORARILY IN THE MEM LOC 33H
				JNB			0AH, MH_5
				SWAP		A
				MOV			33H, A							
				SJMP		MH_6							; SKIP OPERATIONS IN LABEL MHEX_5

MH_5:			ORL			A, 33H							; FORMAT COMPLETED
				MOV			33H, A							; CARRY OUT THE FINAL SAVE
				
MH_6:			MOV			A, 31H							; LOAD THE ASCII CODE FOR THE CURRENT CHARARTER TO BE DISPLAYED
				CALL		LCD_SHO

				DJNZ		3BH, M_HEX						; DECREMENT AND JUMP TILL ZERO TO CONTINUE

MH_7:			CALL		KEYPAD_ID						; ENSURE A KEY IS DEPRESSED
				JNB			01H, MH_7
				CLR			01H	

				CJNE		A, #'*', MH_7					; WAIT FOR 'NEXT KEY' TO BE PRESSED

				MOV			3BH, #02H						; LOAD ANOTHER TWO DIGIT COUNT INTO MHC FOR THE NEXT INPUT (INSTRUCTION SET)

				CLR			03H								; SELECT OPCODE TYPE IN THE 'NEXT SR'
				CALL		NEXT							; CALL NEXT OSR TO PERMANENTLY SAVE THE HEX CODE IN THE EXTERNAL MEMORY
				CALL		ADDRESS_DISPLAY_CONTROL			; CALL THIS OSR TO CLEAR THE LCD SCREEN AND WRITE THE NEW ADDRESS IN LINE 1

				AJMP		M_HEX							
; ELOO U MAY PUT UR FLAG FOR SUB MEM ASCII_2_HEX SR CALL HERE(NOTE SUCH FLAG MUST BE CLEAR AT THE SUB MEM SR ON RETURN IMMEDIATELY)
; EXPECTED FLAG INSTRUCTION: JB		SubMem'sAscii2hexFlag, EXIT_A2H

; THE TEST IS COMPLETED. THE INEQUQLITY: 30H =< A =< 46H HAS BEEN SATISFIED AND CONVERSION HAS TAKEN PLACE!!!
					