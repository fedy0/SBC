HEX_2_ASCII:
; THIS A SR THAT TAKES CARE OF GENERATING THE EQUIVALENT ASCII CODE FROM A HEX INPUT CODE
				; HIGH ORDER BYTE CONVERSION BEGINS	HERE
				MOV			A, 36H					; LOAD THE HEX BYTE TO BE CONVERTED INTO 'A'
				ANL			A, #0F0H				; MASK THE LOW ORDER BYTE
				SWAP		A						; HOB <==> LOB
				CJNE		A, #0AH, H2A_1
				CLR			C
													; IF 'A' >= 0AH	DO THE FOLLOWING INSTRUCTIONS
H2A_1:			JC			H2A_2					; ADD 07H & LATER 30H 
				ADD			A, #07H					; (RAISE THE CONTENT OF 'A' TO THE NUMERICAL VALUE OF ITS EQUIVALENT ASCII CODE)

													; IF 'A' < 0AH DO THE FOLLOWING INSTRUCTIONS
H2A_2:			ADD			A, #30H				   	; ADD 30H (RAISE THE CONTENT OF 'A' TO THE NUMERICAL VALUE OF ITS EQUIVALENT ASCII CODE) 

				MOV			38H, A					; SAVE THE ASCII CODE OF THE HIGH ORDER BYTE IN MEM. 38H
													; HIGH ORDER BYTE CONVERSION ENDS HERE

				; LOW ORDER BYTE CONVERSION BEGINS HERE
				MOV			A, 36H					; LOAD THE HEX BYTE TO BE CONVERTED INTO 'A'
				ANL			A, #0FH					; MASK THE HIGH ORDER BYTE
				CJNE		A, #0AH, H2A_3
				CLR			C
													; IF 'A' >= 0AH	DO THE FOLLOWING INSTRUCTIONS
H2A_3:			JC			H2A_4					; ADD 07H & LATER 30H 
				ADD			A, #07H					; (RAISE THE CONTENT OF 'A' TO THE NUMERICAL VALUE OF ITS EQUIVALENT ASCII CODE)

													; IF 'A' < 0AH DO THE FOLLOWING INSTRUCTIONS
H2A_4:			ADD			A, #30H				   	; ADD 30H (RAISE THE CONTENT OF 'A' TO THE NUMERICAL VALUE OF ITS EQUIVALENT ASCII CODE) 

				MOV			37H, A					; SAVE THE ASCII CODE OF THE LOWER ORDER BYTE IN MEM. 37H

													; LOW ORDER BYTE CONVERSION ENDS HERE
				RET

; TESTED: QC PASSED SYNTAXICALLY AND SEMANTICALLY