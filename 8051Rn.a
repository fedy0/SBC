; THIS SR IS USE TO GENERATE THE THREE LEAST BIT OF 
; AN OPCODE OR OPERAND THAT USED R0 - R7 AS IN AN INSTRUCTION
; MEMORY LOCATION USED: 33H
___8051Rn:				CALL 		LCD_SHO							; DISPLAYS 'R' WHICH IS SAVED IN ACC. FROM THE CALLER PROGRAM
___8051Rn_:				CALL		KEYPAD_ID
						JNB			01H, ___8051Rn_
						CLR			01H

						CJNE		A, #'0', ___8051Rn_1
						SJMP		___8051Rn_8						; NO NEED TO MANIPULATE FOR ZERO'S CASE SINCE 33H CONTAINS ITS INSTR SET
								
___8051Rn_1:			CJNE		A, #'1', ___8051Rn_2
						ORL			33H, #01H
						SJMP		___8051Rn_8	
								
___8051Rn_2:			; ELOO, U HV TO QUERY THE MOVE ID FLAG HERE (ie BEFORE 18H) AND CANCEL IS WHEN APT
						JB			18H, ___8051Rn_					; THIS LINE IS PECULIAR TO THE SR '___8051Rn'
																	; USED TO STOP COMPARISON FOR 'Ri' OPERAND TYPE (i = 0 or 1)
						CJNE		A, #'2', ___8051Rn_3				
						ORL			33H, #02H
						SJMP		___8051Rn_8	

___8051Rn_3:			CJNE		A, #'3', ___8051Rn_4				
						ORL			33H, #03H
						SJMP		___8051Rn_8	

___8051Rn_4:			CJNE		A, #'4', ___8051Rn_5				
						ORL			33H, #04H
						SJMP		___8051Rn_8	

___8051Rn_5:			CJNE		A, #'5', ___8051Rn_6				
						ORL			33H, #05H
						SJMP		___8051Rn_8	

___8051Rn_6:			CJNE		A, #'6', ___8051Rn_7				
						ORL			33H, #06H
						SJMP		___8051Rn_8	

___8051Rn_7:			CJNE		A, #'7', ___8051Rn_EXIT				
						ORL			33H, #07H

___8051Rn_8:			SETB		0FH							; IF BIT ADDR 0FH = 1 THE KEY PRESSED IS A VALID NUMBER ELSE 0FH = 0
						CALL		LCD_SHO
						JBC			25H, ___8051Rn_8_ 
						JB			18H, ___8051Rn_EXIT			; USED ONLY FOR THE @'S SEGMENT IN THE CALLER SR '___8051OPERAND_d_R_A'
						JB			22H, ___8051Rn_EXIT			; USED ONLY FOR THE Rn'S SEGMENT IN THE CALLER SR '___8051OPERAND_A_drct_C'
						JB			23H, ___8051Rn_EXIT_
___8051Rn_8_:			CALL		___8051NUMBERS_LATCHED_IN	; ELOO, WHICH PROGRAM/SR IS THIS CALL NECESSARY FOR AND THE FLAG JUST BELOW FOR?
						CLR			16H							; PREPARES FLAG FOR NEXT TIME OF USAGE
						SJMP		___8051Rn_EXIT

___8051Rn_EXIT_:		SETB		24H							; THIS FLAG WOULD BE QUERIED BY THE CALLER PROGRAM (USED FOR IDing 'DJNZ Rn, ' INSTR

___8051Rn_EXIT:			JNB			0FH, ___8051Rn_
						RET