FLY_DATA:
; THIS SUBROUTINE IS SUPPOSE TO CARRY PROGRAMS FOR THE DISPLAY OF ',' & ' '(SPACE)
; BEFORE THE INPUT DATA
					CALL 		LCD_SHO						; SHOW THE LAST ALPHABET OF THE OPCODE (DISPLAY THE CHARATER IN 'A' FROM THE CALLER PROGRAM)
FLY_DATA_SKIP:												; SKIPS THE INSTRUCTION 'CALL LCD_SHO'
					CALL		KEYPAD_ID					; ENSURE A KEY IS DEPRESSED
					JNB			01H, FLY_DATA_SKIP
					CLR			01H							; GET READY FOR NEXT KEY
					
					CJNE		A, #'*', FLY_DATA_SKIP		; ENSURES NEXT IS USE TO GIVE SPACE
					MOV			A, #','						; PLACE A COMMA				   
					CALL 		LCD_SHO
					MOV			A, #' '						; GIVE A GAP				   
					CALL 		LCD_SHO
					CLR			03H							; SELECT OPCODE TYPE IN THE 'NEXT SR'
					CALL		NEXT
					
					MOV			32H, #02H					; ENSURES THAT ONLY TWO NIBBLES (ie 1 BYTE DATA) ARE ENTERED
					CLR			04H							; CLEAR THE BYTE INDICATOR FOR A 1 BYTE(2 NIBBLE) OPERAND CONVERSION

FD_1:				CALL		KEYPAD_ID					; ENSURE A KEY IS DEPRESSED
					JNB			01H, FD_1
					CLR			01H							; GET READY FOR NEXT KEY

					CALL		ASCII_2_HEX					; DO THE CONVERSION AND COMPARE
					JNB			02H, FD_1					; ENSURES THAT THE KEY PRESSED IS BETWEEN 0 - F IN HEX
					CLR			02H							; GET READY FOR NEXT KEY

					MOV 		A,31H						; DISPLAY THE NUMBER
					CALL		LCD_SHO
					DJNZ		32H, FD_1					; CHECK IF TWO NIBBLES (ONE BYTE) DATA HAVE BEEN ENTERED

FD_2:				CALL		KEYPAD_ID					; ENSURE A KEY IS DEPRESSED
					JNB			01H, FD_2
					CLR			01H							; GET READY FOR NEXT KEY
					CJNE		A, #'*', FD_2				; ENSURES NEXT IS USE TO GIVE SPACE
					SETB		03H							; SELECT OPERAND TYPE 'NEXT SR' (NOT OPCODE TYPE)
					CLR			07H							; SELECT DATA TYPE OPERAND IN THE 'NEXT SR'
					CALL		NEXT						; CALL NEXT OSR TO PERMANENTLY SAVE THE OPCODE

					CALL		ADDRESS_DISPLAY_CONTROL		; CALL THIS OSR TO CLEAR THE LCD SCREEN AND WRITE THE NEW ADDRESS IN LINE 1

					RET