; EXAMINE THE REGISTERS OF THE 8085uP (EXAM REG)
; THIS SUBROUTINE IS USED TO EXAMINE THE CONTENT OF THE 8085uP IN-BUILT REGISTERS (ie A, B, C, D, E, H & L)

; *** IT SHOULD BE INCLUDED IN THE MANUAL THAT THE USER SHOULD EXAMINE THE CONTENT OF THE ACCUMMULATOR FIRST BEFORE OTHER TO AVOID 
; *** LOSS OF ITS DATA SINCE IT IS THE ONE THAT DOES THE TRANFER

;					ERITSM		EQU		42H					; EXAM REG INSTRUCTION TEMPORARY STORAGE MEMORY
;					ERRM1		EQU		43H					; EXAM REG RESERVED MEMORY LOC. 1 FOR LOB (THE ADDRESS IS USE TO STORE THE CONTENT OF THE EXAMINED REG.)
;					ERRM2		EQU		44H					; EXAM REG RESERVED MEMORY LOC. 2 FOR HOB
; 					ERSATSM1	EQU		45H					; EXAM REG START ADDRESS TEMPORARY STORAGE MEMORY LOC. 1 FOR LOB
; 					ERSATSM2	EQU		46H					; EXAM REG START ADDRESS TEMPORARY STORAGE MEMORY LOC. 2 FOR HOB


EXAM_REG:			
					CLR_LCD
					D_STR									; DISPLAY THE FOLLOWING STRINGS ON LINE ONE (SINCE LCD DDRAM ADDRESS RESETS WHEN CLEARED)
					DB			'Examine Register',0
					MOV			DPH, 41H				   	; PREPARE AN ADDRESS +2 GREATER THAN THE END ADDRESS FOR AUTO EXECUTION 
					MOV			DPL, 40H				   	; BY BOTH THE uC AND uP

					INC			DPTR
					MOV			44H, DPH					; SAVE THE ADDRESS OF THE RESERVED AREA FOR THE ANSWER TO THE EXAMINED REGISTER
					MOV			43H, DPL

					INC			DPTR						
					MOV			46H, DPH					; SAVE THE START ADDRESS OF THE EXECUTION OF EXAMINE REGISTER BY THE 8085uP
					MOV			45H, DPL

					MOV			A, #0C0H					; THE INSTRUCTIONS BELOW DISPLAYS ON LINE 2
					CALL		LCD_CMD
					
ER_1:				CALL		KEYPAD_ID					; ENSURE A KEY(1ST KEY) IS DEPRESSED
					JNB			01H, ER_1
					CLR			01H							; GET READY FOR NEXT KEY
					
					CJNE		A, #'A', ER_2				; JUMP TO A'S SECOND CHARACTER ELSE CONTINUE
					MOV			42H, #7FH					; SAVE THE HEXCODE (8085 INST. SET) OF THE INSTRUCTION 'MOV	A, A' 
					SJMP		ER_8
ER_2:				CJNE		A, #'B', ER_3				; JUMP TO C'S SECOND CHARACTER ELSE CONTINUE 
					MOV			42H, #78H					; SAVE THE HEXCODE (8085 INST. SET) OF THE INSTRUCTION 'MOV	A, B' 
					SJMP		ER_8
ER_3:				CJNE		A, #'C', ER_4				; JUMP TO D'S SECOND CHARACTER ELSE CONTINUE 
					MOV			42H, #79H					; SAVE THE HEXCODE (8085 INST. SET) OF THE INSTRUCTION 'MOV	A, C' 
					SJMP		ER_8
ER_4:				CJNE		A, #'D', ER_5				; JUMP TO A'S SECOND CHARACTER ELSE CONTINUE
					MOV			42H, #7AH					; SAVE THE HEXCODE (8085 INST. SET) OF THE INSTRUCTION 'MOV	A, D' 
					SJMP		ER_8
ER_5:				CJNE		A, #'E', ER_6				; JUMP TO C'S SECOND CHARACTER ELSE CONTINUE 
					MOV			42H, #7BH					; SAVE THE HEXCODE (8085 INST. SET) OF THE INSTRUCTION 'MOV	A, E' 
					SJMP		ER_8
ER_6:				CJNE		A, #'H', ER_7				; JUMP TO D'S SECOND CHARACTER ELSE CONTINUE 
					MOV			42H, #7CH					; SAVE THE HEXCODE (8085 INST. SET) OF THE INSTRUCTION 'MOV	A, H' 
					SJMP		ER_8
ER_7:				CJNE		A, #'L', ER_1				; JUMP TO D'S SECOND CHARACTER ELSE CONTINUE 
					MOV			42H, #7DH					; SAVE THE HEXCODE (8085 INST. SET) OF THE INSTRUCTION 'MOV	A, L' 

ER_8:				CALL		LCD_SHO						; DISPLAY THE REGISTERS' ALPAHBET INDICATOR FOLLOWED BY THE CHARATER ':'
					MOV			A, #':'
					CALL		LCD_SHO

					MOV			A, 42H						; SEND TO THE EXTERNAL DATA MEM. THE HEXCODE (IN 8085uP INSTRUCTION SET) TO READ  
					MOVX		@DPTR, A					; THE CONTENT OF THE REGISTER TO BE EXAMINED AND PLACE IT IN 8085''s ACCUMMULATOR
					MOV			A, #32H						; SAVE THE HEXCODE (8085 INST. SET) OF THE INSTRUCTION 'STA ....'  
					INC			DPTR
					MOVX		@DPTR, A					; PLACE IN THE EXTERNAL DATA MEMORY
					MOV			A, 43H						; LOAD THE SECOND BYTE (LOB OF THE ADDRESS) FIRST AS ASSMBLEY PRINCIPLE DEMANDS
					INC			DPTR
					MOVX		@DPTR, A					; PLACE IN THE EXTERNAL DATA MEMORY
					MOV			A, 44H						; LOAD THE THIRD BYTE (HOB OF THE ADDRESS) SECOND AS ASSMBLEY PRINCIPLE DEMANDS					
					INC			DPTR
					MOVX		@DPTR, A					; PLACE IN THE EXTERNAL DATA MEMORY
					MOV			A, #76H						; SAVE THE HEXCODE (8085 INST. SET) OF THE INSTRUCTION 'HLT'
					INC			DPTR
					MOVX		@DPTR, A					; PLACE IN THE EXTERNAL DATA MEMORY

; PLACE AN INSTRUCTION TO TELL THE MICROPROCESSOR TO BEGIN EXECUTION ON THE FOLLOWING ADDRESS: 44H (HOB) & 43H (LOB)
					CALL		EXE
					

					AJMP		EXAM_REG						; START AFRESH